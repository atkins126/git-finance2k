unit uDMBaixaTP;

interface

uses
  System.SysUtils, System.Classes, uUtil, udmConexao, uDMOrganizacao,
  FireDAC.Stan.Intf, FireDAC.Stan.Option, FireDAC.Stan.Param,
  FireDAC.Stan.Error, FireDAC.DatS, FireDAC.Phys.Intf, FireDAC.DApt.Intf,
  FireDAC.Stan.Async, FireDAC.DApt, Data.DB, FireDAC.Comp.DataSet,
  FireDAC.Comp.Client;

type
  TdmBaixaTP = class(TDataModule)
    qryPreencheGrid: TFDQuery;
    qryObterIDTPB: TFDQuery;
  private
    { Private declarations }
    pIdOrganizacao, pIdUsuario :string;
    function  preencheGrid(pIdOrganizacao: string) :TFDQuery;
    function obterIDTPB(pIdOrganizacao, pIdtituloPagar: String): string;
  public
    { Public declarations }

        constructor Create (AOwner :TComponent; pIdOrganizacao :string);
  end;

var
  dmBaixaTP: TdmBaixaTP;

implementation

{%CLASSGROUP 'Vcl.Controls.TControl'}

{$R *.dfm}

{ TdmBaixaTP }

constructor TdmBaixaTP.Create(AOwner: TComponent; pIdOrganizacao: string);
begin
  inherited Create(AOwner);
  pIdOrganizacao := pIdOrganizacao;


end;


function TdmBaixaTP.preencheGrid(pIdOrganizacao: string) :TFDQuery;
var
sqlCmd :string;
begin

dmConexao.conectarBanco;
 try
    qryPreencheGrid.Close;
    qryPreencheGrid.Connection := dmConexao.conn;
   // qryPreencheGrid.SQL.Clear;
    //qryPreencheGrid.SQL.Add(sqlCmd);
    qryPreencheGrid.ParamByName('PIDORGANIZACAO').AsString := pIdOrganizacao;
    qryPreencheGrid.Open;

   // (dbgrd1.DataSource.DataSet as TFDQuery).Last;
   // (dbgrd1.DataSource.DataSet as TFDQuery).First;

 except
 raise Exception.Create('Erro ao obter lista de títulos...' );

 end;

 Result := qryPreencheGrid;

end;



function TdmBaixaTP.obterIDTPB(pIdOrganizacao, pIdtituloPagar: String): string;
var
idTPB : string;
begin
  idTPB :='';
 Result := '';
 dmConexao.conectarBanco;

  qryObterIDTPB.Close;
  qryObterIDTPB.Connection := dmConexao.Conn;

  qryObterIDTPB.ParamByName('PIDORGANIZACAO').AsString :=  pIdOrganizacao;
  qryObterIDTPB.ParamByName('pIdtituloPagar').AsString :=  pIdtituloPagar;
  qryObterIDTPB.Open;

   if not qryObterIDTPB.IsEmpty then
          idTPB := qryObterIDTPB.FieldByName('ID_TITULO_PAGAR_BAIXA').AsString;


  Result := idTPB;

end;

end.
