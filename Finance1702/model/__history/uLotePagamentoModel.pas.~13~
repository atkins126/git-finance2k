unit uLotePagamentoModel;

interface

{


CREATE TABLE LOTE_PAGAMENTO (
    ID_LOTE_PAGAMENTO          VARCHAR(36) NOT NULL,
    ID_ORGANIZACAO             VARCHAR(36) NOT NULL,
    ID_USUARIO                 NUMERIC(5,0),
    ID_CONTA_BANCARIA          VARCHAR(36),
    ID_FUNCIONARIO             VARCHAR(36),
    ID_CONTA_BANCARIA_CHEQUE   VARCHAR(36),
    ID_TIPO_OPERACAO_BANCARIA  VARCHAR(36),
    ID_FORMA_PAGAMENTO         VARCHAR(36),
    LOTE                       VARCHAR(30),
    STATUS                     VARCHAR(30),
    DATA_REGISTRO              DATE,
    DATA_PAGAMENTO             DATE NOT NULL,
    QTD_TIT_PAG                NUMERIC(5,0),
    VALOR                      NUMERIC(10,2)
); }

uses
  Windows, Messages, Classes, SysUtils, uContaBancariaModel, uContaBancariaDAO, uContaBancariaChequeModel, uContaBancariaChequeDAO,
  uUsuarioModel, uUsuarioModel, uUsuarioDAO, uOrganizacaoModel, uTituloPagarModel, uTituloPagarDAO,
  uFormaPagamentoModel, uFormaPagamentoDAO, uTipoOperacaoBancariaModel, uTipoOperacaoBancariaDAO;

type
  TLotePagamentoModel = class(TObject)
  private

    FFID: string;
    FFIDorganizacao: string;
    FFIDcontaBancaria :String;
    FFIDcheque:String;
    FFIDTOB :string;
    FFIDformaPagamento :string;
    FFIDResponsavel: string;
    FFIDusuario: Integer;

    FFstatus :string;
    FFlote :string;
    FFdataRegistro: TDateTime;
    FFdataPagamento: TDateTime;
    FFperiodoInicial: TDateTime;
    FFperiodoFinal: TDateTime;
    FFqtdTitPag: Integer;
    FFvalor: Currency;

    FFusuario         : TUsuarioModel;
    FFcontaBancaria   : TContaBancariaModel;
    FFcheque          : TContaBancariaChequeModel;
    FFFOrmaPagamento  : TFormaPagamentoModel;
    FFTOB             : TTipoOperacaoBancariaModel;

    public


    property FID: string read FFID write SetFID;
    property FIDresponsavel: string read FFIDresponsavel write SetFIDresponsavel;
    property FIDorganizacao: string read FFIDorganizacao write SetFIDorganizacao;
    property FIDusuario: string read FFIDusuario write SetFIDusuario;
    property FIDcontaBancaria: string read FFIDcontaBancaria write SetFIDcontaBancaria;
    property FIDcheque: string read FFIDcheque write SetFIDcheque;
    property FIDformaPagamento: string read FFIDformaPagamento write SetFIDformaPagamento;
    property FIDTOB: string read FFIDTOB write SetFIDTOB;
    property Fstatus: string read FFstatus write SetFstatus;
    property Flote: string read FFlote write SetFlote;
    property FdataRegistro: TDate read FFdataRegistro write SetFdataRegistro;
    property FdataPagamento: TDate read FFdataPagamento write SetFdataPagamento;
    property Fvalor: Currency read FFvalor write SetFvalor;
    property FqtdTitPag: Integer read FFqtdTitPag write SetFqtdTitPag;

    property Fusuario         : TUsuarioModel               read FFusuario        write SetFusuario;
    property FcontaBancaria   : TContaBancariaModel         read FFcontaBancaria  write SetFcontaBancaria;
    property Fcheque          : TContaBancariaChequeModel   read FFcheque         write SetFcheque;
    property FFOrmaPagamento  : TFormaPagamentoModel        read FFFOrmaPagamento write SetFFOrmaPagamento;
    property FTOB             : TTipoOperacaoBancariaModel  read FFTOB            write SetFTOB;




    Constructor Create;



  end;


implementation

end.
