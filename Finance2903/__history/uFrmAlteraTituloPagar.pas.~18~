unit uFrmAlteraTituloPagar;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Data.DB, Vcl.Grids, Vcl.DBGrids,uDMContasPagar,uDMContasPagarManter,uDMContasPagarDTS,
  Vcl.StdCtrls, FireDAC.Stan.Intf, FireDAC.Stan.Option, FireDAC.Stan.Param, udmConexao,
  FireDAC.Stan.Error, FireDAC.DatS, FireDAC.Phys.Intf, FireDAC.DApt.Intf,
  FireDAC.Stan.Async, FireDAC.DApt, FireDAC.Comp.DataSet, FireDAC.Comp.Client;

type
  TfrmAlteraNumDocTP = class(TForm)
    btnConsulta: TButton;
    dbgrdTP: TDBGrid;
    dsPreencheGrid: TDataSource;
    qryObterTodos: TFDQuery;
    procedure FormCreate(Sender: TObject);
    procedure btnConsultaClick(Sender: TObject);
  private
    { Private declarations }
    idOrganizacao : string;
    codigoErro :string;
    procedure inicializarDM(Sender: TObject);
    function obterTodos(pIdOrganizacao: string): Boolean;
  public
    { Public declarations }
  end;

var
  frmAlteraNumDocTP: TfrmAlteraNumDocTP;

implementation

{$R *.dfm}


function TfrmAlteraNumDocTP.obterTodos(pIdOrganizacao: string): Boolean;
begin
codigoErro := 'TP-09';
   try
      qryObterTodos.Close;
      qryObterTodos.Connection := dmConexao.Conn;
      qryObterTodos.ParamByName('PIDORGANIZACAO').AsString := pIdOrganizacao;
      //qryObterTodos.ParamByName('DTDATAINICIAL').AsString := FormatDateTime('mm/dd/yyyy', dtDataInicial);
      //qryObterTodos.ParamByName('DTDATAFINAL').AsString :=  FormatDateTime('mm/dd/yyyy', dtDataFinal);

      qryObterTodos.Open;
  except

  raise(Exception).Create('Erro ao tentar Obter todos os TPs ' + codigoErro );

  end;
  Result := not qryObterTodos.IsEmpty;
end;



procedure TfrmAlteraNumDocTP.btnConsultaClick(Sender: TObject);
begin
dbgrdTP.DataSource.DataSet.Next;
dbgrdTP.Refresh;

ShowMessage('Dados atualizados com sucesso');

end;

procedure TfrmAlteraNumDocTP.FormCreate(Sender: TObject);
begin
  inicializarDM(Self);
end;

procedure TfrmAlteraNumDocTP.inicializarDM(Sender: TObject);
begin
  if not(Assigned(dmContasPagarManter)) then
  begin
    dmContasPagarManter := TdmContasPagarManter.Create(Self);
  end ;

   

  if not(Assigned(dmContasPagarDTS)) then
  begin
    dmContasPagarDTS := TdmContasPagarDTS.Create(Self);
  end  ;




end;

end.
