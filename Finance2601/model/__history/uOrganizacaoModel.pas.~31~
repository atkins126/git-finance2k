unit uOrganizacaoModel;


interface


uses
  Windows, Messages, Classes, udmConexao, SysUtils,
  FireDAC.Stan.Intf, FireDAC.Stan.Option, FireDAC.Stan.Param,
  FireDAC.Stan.Error, FireDAC.DatS, FireDAC.Phys.Intf, FireDAC.DApt.Intf,
  FireDAC.Stan.Async, FireDAC.DApt, Data.DB, FireDAC.Comp.DataSet,
  FireDAC.Comp.Client, FireDAC.UI.Intf, FireDAC.Comp.ScriptCommands, udmConexao,
  FireDAC.Stan.Util, FireDAC.Comp.Script;


type
  TOrganizacaoModel = class
  private

    FFID: string;
    FFRazaoSocial: string;
    FFSigla: string;
    FFFantasia: string;
    FFCNPJ: string;
    FFVersao: string;

    function getFFID: string;
    function getFFRazaoSocial: string;
    function getFFSigla: string;
    function getFFFantasia: string;
    function getFFCNPJ: string;
    function getFFVersao: string;


    procedure SetFID(const Value: string);
    procedure SetFCNPJ(const Value: string);
    procedure SetFFantasia(const Value: string);
    procedure SetFRazaoSocial(const Value: string);
    procedure SetFSigla(const Value: string);
    procedure SetFVersao(const Value: string);
    function carregarDadosOrganizacao(pIdOrganizacao: string): Boolean;

  public
    // atibutos e métodos públicos
    property FID: string read getFFID write SetFID;
    property FRazaoSocial: string read getFFRazaoSocial write SetFRazaoSocial;
    property FSigla: string read getFFSigla write SetFSigla;
    property FFantasia: string read getFFFantasia write SetFFantasia;
    property FCNPJ: string read getFFCNPJ write SetFCNPJ;
    property FVersao: string read getFFVersao write SetFVersao;


    constructor Create;
    destructor Destroy; override;

  end;

implementation
{ TOrganizacao }


constructor TOrganizacaoModel.Create;
begin
// ver o que por aqui
if not FFID = ''  then begin



end;
end;

destructor TOrganizacaoModel.Destroy;
begin

  inherited;
end;

function TOrganizacaoModel.getFFCNPJ: string;
begin
 Result := FFCNPJ;
end;

function TOrganizacaoModel.getFFFantasia: string;
begin
  Result := FFFantasia;
end;

function TOrganizacaoModel.getFFID: string;
begin
  Result := FFID;
end;

function TOrganizacaoModel.getFFRazaoSocial: string;
begin
  Result := FFRazaoSocial;
end;

function TOrganizacaoModel.getFFSigla: string;
begin
   Result := FFSigla;
end;

function TOrganizacaoModel.getFFVersao: string;
begin
   Result := FFVersao;
end;

procedure TOrganizacaoModel.SetFCNPJ(const Value: string);
begin
   FFCNPJ :=Value;
end;

procedure TOrganizacaoModel.SetFFantasia(const Value: string);
begin
     FFFantasia :=Value;
end;

procedure TOrganizacaoModel.SetFID(const Value: string);
begin
     FFID :=Value;
end;

procedure TOrganizacaoModel.SetFRazaoSocial(const Value: string);
begin
     FFRazaoSocial :=Value;
end;

procedure TOrganizacaoModel.SetFSigla(const Value: string);
begin
     FFSigla :=Value;
end;

procedure TOrganizacaoModel.SetFVersao(const Value: string);
begin
    FFVersao :=Value;
end;



function TOrganizacaoModel.carregarDadosOrganizacao(pIdOrganizacao : string): Boolean;
var
cmd :string;
qryDadosEmpresa :TFDQuery;
begin
  try
     dmConexao.conectarBanco;

     cmd := ' SELECT O.RAZAO_SOCIAL,  O.FANTASIA,  O.CNPJ, E.SIGLA AS UF, '+
            ' O.CEP,  C.CIDADE, O.ID_ORGANIZACAO, O.CODINOME, O.LICENCA, O.SERIAL_CLIENTE, O.SISTEMA_CONTABIL, O.CODIGO_WEB, O.IPSERVERBD ' +
            ' FROM ORGANIZACAO O ' +
            ' LEFT OUTER JOIN BAIRRO B ON (O.ID_BAIRRO = B.ID_BAIRRO) ' +
            ' LEFT OUTER JOIN CIDADE C ON (B.ID_CIDADE = C.ID_CIDADE) ' +
            ' LEFT OUTER JOIN ESTADO E ON (C.ID_ESTADO = E.ID_ESTADO) ' +
            ' WHERE (O.ID_ORGANIZACAO = :PIDORGANIZACAO) ' ;
   //  cmd := ' SELECT *  FROM ORGANIZACAO O  WHERE (O.ID_ORGANIZACAO = :PIDORGANIZACAO) ' ;
      {
       qryDadosEmpresa := TfTFDQuery.cre
       qryDadosEmpresa.Close;
       qryDadosEmpresa.Connection := dmConexao.Conn;
       //qryDadosEmpresa.SQL.Clear;
      // qryDadosEmpresa.SQL.Add(cmd);
       qryDadosEmpresa.ParamByName('PIDORGANIZACAO').AsString := pIdOrganizacao;
       qryDadosEmpresa.Open;

       }

  except
    raise(Exception).Create('Problemas ao carregar dados da organização.. ');
  end;

  Result := not qryDadosEmpresa.IsEmpty;
end;

end.
