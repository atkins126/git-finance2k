unit uFrmTelaPagamentoTP;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,uUtil,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls,uFrmBaixaFP, uDMBaixaTP,
  dxSkinsCore, dxSkinsDefaultPainters, cxGraphics, cxControls, cxLookAndFeels,
  cxLookAndFeelPainters, dxRibbonSkins, dxRibbonCustomizationForm, cxClasses,
  dxRibbon, dxBar, dxStatusBar, Data.DB, Vcl.Grids, Vcl.DBGrids, udmConexao, uDMOrganizacao,uTituloPagarModel,
  FireDAC.Stan.Intf, FireDAC.Stan.Option, FireDAC.Stan.Param,
  FireDAC.Stan.Error, FireDAC.DatS, FireDAC.Phys.Intf, FireDAC.DApt.Intf,
  FireDAC.Stan.Async, FireDAC.DApt, FireDAC.Comp.DataSet, FireDAC.Comp.Client,
  cxTextEdit, cxBarEditItem ;

type
  TfrmPagamentoTitulos = class(TForm)
    dxBarManager1: TdxBarManager;
    menuBaixaTP: TdxRibbonTab;
    dxRibbon1: TdxRibbon;
    dxStatusBar: TdxStatusBar;
    dbgrdMain: TDBGrid;
    dsTitulos: TDataSource;
    dxBarManager1Bar1: TdxBar;
    dxBarManager1Bar2: TdxBar;
    dxBarManager1Bar3: TdxBar;
    cxbrdtmPesquisa: TcxBarEditItem;
    dxBtnFechar: TdxBarLargeButton;
    dxBtnPagar: TdxBarLargeButton;
    dxBtnPagarAV: TdxBarLargeButton;
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure FormCreate(Sender: TObject);
    procedure cxbrdtmPesquisaCurChange(Sender: TObject);
    procedure dxBtnFecharClick(Sender: TObject);
    procedure dbgrdMainTitleClick(Column: TColumn);
    procedure FormKeyDown(Sender: TObject; var Key: Word; Shift: TShiftState);
    procedure dsTitulosDataChange(Sender: TObject; Field: TField);
    procedure dxBtnPagarClick(Sender: TObject);
    procedure dxBtnPagarAVClick(Sender: TObject);
  private
    { Private declarations }
    FSListaIDTP :TStringList;
    pIdTP,  pIdOrganizacao, pIdUsuario :string;
      vlrDevido : Currency;
      pTitulo :TTituloPagarModel;
        procedure msgStatusBar(pPosicao: Integer; msg: string);
    procedure limpaStatusBar;
    procedure LimpaTela(Form: TForm);
    procedure preencherGrid;
    procedure limpar;
  public
    { Public declarations }
  end;

var
  frmPagamentoTitulos: TfrmPagamentoTitulos;

implementation

{$R *.dfm}

procedure TfrmPagamentoTitulos.cxbrdtmPesquisaCurChange(Sender: TObject);
begin
 dbgrdMain.DataSource.DataSet.Locate('DOC',UpperCase(cxbrdtmPesquisa.CurEditValue),[loPartialKey]);
end;

procedure TfrmPagamentoTitulos.dbgrdMainTitleClick(Column: TColumn);
begin
 (dbgrdMain.DataSource.DataSet as TFDQuery).IndexFieldNames :=Column.FieldName;
end;

procedure TfrmPagamentoTitulos.dsTitulosDataChange(Sender: TObject;
  Field: TField);
begin
  pIdTP := dmBaixaTP.qryPreencheGrid.FieldByName('ID').AsString;

  pTitulo := TTituloPagarModel.Create;
  pTitulo.FIDorganizacao := pIdOrganizacao;
  pTitulo.FID := pIdTP;

 msgStatusBar(1,' Título pronto para ser pago. Número doc. ' + dmBaixaTP.qryPreencheGrid.FieldByName('DOC').AsString);

end;

procedure TfrmPagamentoTitulos.dxBtnFecharClick(Sender: TObject);
begin
 PostMessage(Self.Handle, WM_CLOSE, 0, 0);
end;

procedure TfrmPagamentoTitulos.dxBtnPagarAVClick(Sender: TObject);
begin
 ShowMessage('Ainda não é possível pagar com acréscimos e deduções.');

end;

procedure TfrmPagamentoTitulos.dxBtnPagarClick(Sender: TObject);
begin

  dbgrdMain.Enabled := False;
  dbgrdMain.DataSource.DataSet.Close;


 try
    frmBaixa := TFrmBaixaFP.Create(Self,pTitulo);
    frmBaixa.ShowModal;
    FreeAndNil(frmBaixa);

  except
    on e: Exception do
      ShowMessage(e.Message + sLineBreak + 'Contate o suporte. Informe erro: ' + ' TfrmBaixaFP ' );
  end;

  LimpaTela(Self);
  limpar;


end;

procedure TfrmPagamentoTitulos.FormClose(Sender: TObject;
  var Action: TCloseAction);
begin
 if Assigned(dmBaixaTP) then
  begin
    FreeAndNil(dmBaixaTP);
  end;

  Action := caFree;

end;

procedure TfrmPagamentoTitulos.limpar;
begin

  dbgrdMain.Enabled := True;
  preencherGrid;
  limpaStatusBar;



end;


procedure TfrmPagamentoTitulos.FormCreate(Sender: TObject);
begin
  pIdOrganizacao := uUtil.TOrgAtual.getId;

  if not Assigned(dmBaixaTP) then
  begin
    dmBaixaTP := TdmBaixaTP.Create(Self, pIdOrganizacao);
  end;

  limpar;

end;

procedure TfrmPagamentoTitulos.FormKeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin
  case key of
    VK_F10: dxBtnPagar.Click;
    VK_F12: dxBtnPagarAV.Click;

  end;
end;

procedure TfrmPagamentoTitulos.preencherGrid;
begin
  if dmBaixaTP.preencheGrid(pIdOrganizacao)  then
  begin
    (dbgrdMain.DataSource.DataSet as TFDQuery).Last;
    (dbgrdMain.DataSource.DataSet as TFDQuery).First;
  end;


end;
procedure TfrmPagamentoTitulos.msgStatusBar(pPosicao : Integer; msg :string);
begin
dxStatusBar.Panels[pPosicao].Text := msg;
Application.ProcessMessages;
end;

procedure TfrmPagamentoTitulos.limpaStatusBar;
begin
dxStatusBar.Panels[0].Text := 'Status ';
dxStatusBar.Panels[1].Text := 'Ativo. Teclas de atalho:  [F10] = Pagar  [F12] = Pagar com AC/DE ';
end;

procedure TfrmPagamentoTitulos.LimpaTela(Form: TForm);
var
  i: Integer;
begin

  for i := 0 to Form.ComponentCount - 1 do
  begin
    if Form.Components[i] is TCustomEdit then
    begin
      (Form.Components[i] as TCustomEdit).Clear;
    end;

    if Form.Components[i] is TLabel then
    begin
      TLabel(Form.Components[i]).Caption := '';
    end;

    if Form.Components[i] is TEdit then
    begin
      TEdit(Form.Components[i]).Clear;
    end;

   { if Form.Components[i] is TEvNumEdit then
    begin
      TEvNumEdit(Form.Components[i]).Clear ;
    end;  }

    if Form.Components[i] is TComboBox then
    begin
      TComboBox(Form.Components[i]).Clear ;
      TComboBox(Form.Components[i]).ItemIndex := 0;
    end;



   end;
end;




end.
