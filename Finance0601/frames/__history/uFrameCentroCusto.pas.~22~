unit uFrameCentroCusto;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes,
  Vcl.Graphics, Vcl.Controls, Vcl.Forms, Vcl.Dialogs, FireDAC.Stan.Intf,udmConexao,
  FireDAC.Stan.Option, FireDAC.Stan.Param, FireDAC.Stan.Error, FireDAC.DatS,
  FireDAC.Phys.Intf, FireDAC.DApt.Intf, FireDAC.Stan.Async, FireDAC.DApt,
  Vcl.StdCtrls, Data.DB, FireDAC.Comp.DataSet, FireDAC.Comp.Client,
  FireDAC.Stan.Option, FireDAC.Stan.Param, FireDAC.Stan.Error, FireDAC.DatS,
  FireDAC.Phys.Intf, FireDAC.DApt.Intf, FireDAC.Stan.Async, FireDAC.DApt,uCentroCustoModel,
  Data.DB, FireDAC.Comp.DataSet, FireDAC.Comp.Client, Vcl.StdCtrls;

type
  TFrame3 = class(TFrame)
    cbbCentroCusto: TComboBox;
  private
    { Private declarations }
    idOrganizacao : string;
    FsListaIdCCusto : TStringList;

  public
    { Public declarations }

 function obterTodos(pIdValue: string; var combo: TComboBox;   var listaID: TStringList): boolean;
 function obterCentroCusto (centroCusto :TCentroCustoModel) : TCentroCustoModel;


  end;

implementation

{$R *.dfm}

{ TFrame3 }

function TFrame3.obterCentroCusto( centroCusto: TCentroCustoModel): TCentroCustoModel;
var
sqlCmd :string;
qryObterC : TFDQuery;
auxCC : TCentroCustoModel;
begin
 dmConexao.conectarBanco;

 auxCC := TCentroCustoModel.Create;

 try
       sqlCmd := ' SELECT CC.ID_CENTRO_CUSTO, CC.ID_ORGANIZACAO, '+
                 ' CC.DESCRICAO, CC.CODIGO, CC.SIGLA '+
                 ' FROM CENTRO_CUSTO CC '+
                 ' WHERE (CC.ID_ORGANIZACAO  = :PIDORGANIZACAO) ' +
                 ' AND   (CC.ID_CENTRO_CUSTO = :PID) ';

    qryObterC := TFDQuery.Create(Self);
    qryObterC.Close;
    qryObterC.SQL.Clear;
    qryObterC.SQL.Add(sqlCmd);
    qryObterC.Connection := dmConexao.conn;
    qryObterC.ParamByName('PIDORGANIZACAO').AsString := centroCusto.FIDorganizacao;
    qryObterC.ParamByName('PID').AsString := centroCusto.FID;
    qryObterC.Open;

    if not qryObterC.IsEmpty then
    begin
      auxCC.FID            := qryObterC.FieldByName('ID_CENTRO_CUSTO').AsString;
      auxCC.FIDorganizacao := qryObterC.FieldByName('ID_ORGANIZACAO').AsString;
      auxCC.FDescricao     := qryObterC.FieldByName('DESCRICAO').AsString;
      auxCC.FSigla         := qryObterC.FieldByName('SIGLA').AsString;
      auxCC.FCodigo        := qryObterC.FieldByName('CODIGO').AsInteger;

    end;



 except
 raise Exception.Create('Erro ao tentar obter o centro de custos');

 end;

  Result := auxCC;
end;

function TFrame3.obterTodos(pIdValue: string; var combo: TComboBox;
  var listaID: TStringList): boolean;
begin

end;

end.
